				容器
字符串	str
	定义
		由一系列字符组成的不可变序列容器，存储的是字符的编码值
	编码	
		1. 字节byte：计算机最小存储单位，等于 8 位 bit
		2. 字符：单个的数字，文字与符号
		3. 字符集(码表)：存储字符与二进制序列的对应关系
		4. 编码：将字符转换为对应的二进制序列的过程
		5. 解码：将二进制序列转换为对应的字符的过程
		6. 编码方式：
			ASCII编码：包含英文，数字等字符，每个字符一个字节
			GBK编码：兼容ASCII编码，包含21003个中文，英文一个字节，							中文两个字节
			Unicode：国际统一编码，旧字符集每个字符两个字节，新字符							集四个字节
			UTF-8编码：Unicode与传输方式，英文1个字节，中文三个字节		
	相关函数
		1、ord(字符串)：返回该字符串的Unicode码
		2、chr(整数)：返回该整数对应的字符串
	字面值
		1、单引号和双引号的区别
			1、单引号内的双引号不算结束符
			2、双引号内的单引号不算结束符
		2、三引号作用:
			1、换行会自动转换为换行符\n
			2、三引号内可以包含单引号和双引号
			3、作为文档字符串
		3、转义字符
			1、改变原始字符的含义
				\' \" \""" \n \\ \t \0 空字符
			2、原始字符串：取消转义
				a = r "F:\Python"
	字符串格式化
		1、定义
			生成一定格式的字符串
		2、语法
			字符串%(变量)
			"我的名字是%s,年龄是%s"%(name,age)
		3、类型码
			%s 字符型	%f 浮点型	%d 整型
通用操作
	数学运算符
		1.  +：用于拼接两个容器
		2.  +=：用元容器与右侧容器拼接，并重新绑定变量
		3.  *：重复生成容器元素
		4.  *=：用原容器生成重复元素，并重新绑定变量
		5.  < < = > >= <= == !=：一次比较两个容器中元素，一但不同则返回						比较结果
  
	成员运算符
		如果在制定的序列中找到值，则返回布尔类型
	索引index
		1、作用：访问容器元素
		2、语法：容器名[整数]
		3、说明
			正向索引从0开始，第二个索引为1，最后一个为len
			反向索引从-1开始，-1代表最后一个-1,-2代表倒数第二个
	切片slice
		1、作用
			从容器中获取相应的元素重新组成一个容器
		2、语法
			容器名[(开始索引):(结束索引):(步长)]
		3、说明
			小括号()括起的部分可以省略
	内建函数
		1、  len(x)	返回序列的长度
		2、  max(x)	返回序列的最大值元素
		3、  min(x)	返回序列的最小值元素
		4、  sum(x)	返回序列中所有元素的和(元素必须为数值)
列表	list
	定义
		由一系列变量组成的可变序列容器
	基础操作
		1.创建列表
				
			列表名 = []
			列表名 = list(可迭代对象)
		2.添加元素
			列表名.append(元素)
			列表名.insert(索引，元素)
		3.定位元素
			索引、切片
		4.遍历元素
			正向
				for 变量名 in 列表名:
					变量名就是元素
			反向
				for 索引名 in range(len(列表名)-1,-1,-1):
					列表名[索引名]就是元素
		5.删除元素
			列表名.append(元素)
			del 列表名[索引或切片]
	列表推导式:
		1.定义：
			使用简易方法，将可迭代对象转换为列表
		2.语法：
			变量 = [表达式 for 变量 in 可迭代对象]
			变量 = [表达式 for 变量 in 可迭代对象 if 条件]
		3.说明：
			如果if真值表达式的布尔值为False,则可迭代对象
元组	turple
	定义
		1.由一系列变量组成的不可变序列容器
		2.不可变是指一旦创建不可以再添加/删除/修改元素
	基础操作
		1.创建元组
			元组名 = ()
			元组名 = ()
		2.创建非空元组
			元组名 = (20,)
			元组名 = (1,2,3)
			元组名 = 100,200,300
			元组名 = tuple(可迭代对象)
		3.获取元素
			索引	切片
		4.遍历元素
			正向
				for 变量名 in 元组名:
					变量名就是元素
			反向	
				for 索引名 in range(len0(元组名)-1,-1):
					元组名[索引名]就是元素
	作用
		1.元组与列表都可以存储一系列变量，由于列表会预留内存,所以可以增			加元素
		2.元组会按需分配内存，所以如果变量数量固定，建议使用元组，元组			占用空间更小
		3.应用
			变量交换的本质就是创建元组：x,y = y,x
			格式化字符串的本质就是创建元组："姓名:%s,年龄%d"%("tare				na",15)
字典	dict
	定义
		1.由一系列键值对组成的可变映射容器
		2.一对一的对应关系，且每条记录无序
		3.键必须唯一且不可变(字符串/数字/元组),值没有限制
	基础操作
		1.创建字典	
			字典名 = {}
			字典名 = dict()
		2.查找元素
			字典名[key]
		3.修改元素
			key值存在则修改
			字典名[key] = value
		3.添加元素
			key值不存在则添加
			字典名[key] = value
		4.删除元素
			del 字典名[key]
		5.遍历元素
			1.遍历字典,得到的是key
				for key in 字典名:
    					字典名[key]就是键的集合
			2.遍历字典,获取value
				for value in dict01.values():
    					value就是值的集合
			3.遍历字典,获取键值对key value
				for 变量名 in dict01.items():
    					变量名就是键值对的集合
			4.分别拿出键和值
				for key, value in dict01.items():
    					key是键的集合
    					value是值的集合	

集合	set
	定义
		1.由一系列不重复的不可变类型变量组成的可变映射容器
		2.相当于只有键没有值的字典(键则是集合的数据)
	基础操作
		1.创建空集合：
			集合名 = set()
			集合名 = set(可迭代对象)
		2.创建具有默认值的集合：
			集合名 = set(1,2,3)
			集合名 = set(可迭代对象)
		3.添加元素：
			集合名.add(元素)
		4.删除元素：
			集合名.discard(元素)
	运算
		1.交集&：返回共同元素
			s1 = {1,2,3}
			s2 = {2,3,4}
			s3 = S1 & s2	# {2,3}
		2.并集：返回不重复元素
			s1 = {1,2,3}
			s2 = {2,3,4}
			s3 = s1 | s2	# {1,2,3,4}
		3.补集-：返回只属于其中之一的元素
			s1 = {1,2,3}
			s2 = {2,3,4}
			s3 = s1 - s2	# {1} 属于s1但不属于s2
		  补集^：返回不同元素
			s1 = {1,2,3}
			s2 = {2,3,4}
			s3 = s1 ^ s2	# {1,4} 等同于（s1 - s2 | s2 - s1）
		4.子集<：判断一个集合的所有元素是否完全在另一个集合
			s1 = {1,2,3}
			s2 = {2,3,4}
			s3 = {2,3}
			s4 = s3 < s2	# True
固定集合	frozenset
	定义
		不可变的集合
	作用
		固定集合可以作为字典的键，还可作为集合的值
	基础操作
		创建固定集合：frozenset(可迭代对象)
	运算
		等同于set 			
	 
